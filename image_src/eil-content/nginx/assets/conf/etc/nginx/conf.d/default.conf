# vim: et smartindent sr sw=4 ts=4:
server {
  listen 80 default_server;
  server_name content;
  root /srv/eurostar/htdocs;
  server_tokens off;
  index index.php;

  client_header_buffer_size 8k;
  large_client_header_buffers 8 256k;

  access_log /var/log/nginx/access.log;

  location = /favicon.ico {
      log_not_found off;
      access_log off;
  }

  location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass drupal:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
      fastcgi_buffer_size 128k;
      fastcgi_buffers 4 256k;
      fastcgi_busy_buffers_size 256k;
  }

  location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
  }

  # Very rarely should these ever be accessed outside of your lan
  location ~* \.(txt|log)$ {
      allow 10.0.0.0/8;
      deny all;
  }

  location ~ \..*/.*\.php$ {
      return 403;
  }

  location ~ ^/sites/.*/private/ {
      return 403;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period.
  location ~ (^|/)\. {
      return 403;
  }

  location / {
      try_files $uri /index.php?$query_string; # For Drupal >= 7
  }

  location @rewrite {
      rewrite ^/(.*)$ /index.php?q=$1;
  }

  # In Drupal 8, we must also match new paths where the '.php' appears in the middle,
  # such as update.php/selection. The rule we use is strict, and only allows this pattern
  # with the update.php front controller.  This allows legacy path aliases in the form of
  # blog/index.php/legacy-path to continue to route to Drupal nodes. If you do not have
  # any paths like that, then you might prefer to use a laxer rule, such as:
  #   location ~ \.php(/|$) {
  # The laxer rule will continue to work if Drupal uses this new URL pattern with front
  # controllers other than update.php in a future release.
  location ~ '\.php$|^/update.php' {
      fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
      #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $request_filename;
      fastcgi_intercept_errors on;
      fastcgi_pass drupal:9000;
      fastcgi_buffer_size 128k;
      fastcgi_buffers 4 256k;
      fastcgi_busy_buffers_size 256k;
  }

  # This provides an extra basic authentication step to the admin and login pages
  # Requirement came with RES-1451
  location ~ ^/(admin|user/login|[a-z][a-z]-[a-z][a-z]/admin|[a-z][a-z]-[a-z][a-z]/user/login) {
    auth_basic "You shall not pass!";
    auth_basic_user_file "/srv/eurostar/.htpasswd";
    try_files $uri @rewrite;
  }

  # Fighting with Styles? This little gem is amazing.
  # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
  location ~ ^/sites/.*/files/styles/ { # For Drpal >= 7
      try_files $uri @rewrite;
  }

  location ~* \.(css|gif|ico|jpeg|jpg|js|png|svg|woff|woff2)$ {
      expires 7d;
      log_not_found off;
  }

  location /nginx_status {
      stub_status on;
      access_log   off;
      allow 127.0.0.1;
      allow ::1;
      allow 172.17.0.0/16;
      allow 172.18.0.0/16;
      deny all;
  }

  location ~ ^/fpm_(status|ping)$ {
      access_log off;
      allow 127.0.0.1;
      allow ::1;
      allow 172.17.0.0/16;
      allow 172.18.0.0/16;
      deny all;
      include fastcgi_params;
      # This is important
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_pass drupal:9000;
  }
}
